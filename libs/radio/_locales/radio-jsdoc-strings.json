{
  "radio": "Communicate data using radio packets",
  "radio.Packet.receivedBuffer": "The buffer payload if a buffer was sent in this packet\nor the empty buffer",
  "radio.Packet.receivedNumber": "The number payload if a number was sent in this packet (via ``sendNumber()`` or ``sendValue()``)\nor 0 if this packet did not contain a number.",
  "radio.Packet.receivedString": "The string payload if a string was sent in this packet (via ``sendString()`` or ``sendValue()``)\nor the empty string if this packet did not contain a string.",
  "radio.Packet.serial": "The serial number of the sender of the packet or 0 if the sender did not sent their serial number.",
  "radio.Packet.signal": "The received signal strength indicator (RSSI) of the packet.",
  "radio.Packet.time": "The system time of the sender of the packet at the time the packet was sent.",
  "radio._packetProperty": "Gets a packet property.",
  "radio._packetProperty|param|type": "the packet property type, eg: PacketProperty.time",
  "radio.off": "Disables the radio for use as a multipoint sender/receiver.\nDisabling radio will help conserve battery power when it is not in use.",
  "radio.on": "Initialises the radio for use as a multipoint sender/receiver\nOnly useful when the radio.off() is used beforehand.",
  "radio.onDataPacketReceived": "Obsoleto. Use onDataReceived() em vez disso\nRegistra o código a ser executado quando o rádio recebe um pacote. Também leva o\npacote recebido da fila de rádio.",
  "radio.onDataReceived": "Used internally by the library.",
  "radio.onReceivedBuffer": "Registers code to run when the radio receives a buffer.",
  "radio.onReceivedBufferDeprecated": "Registra o código a ser executado quando o rádio recebe um par de valores-chave.\nonReceivedBuffer instead.",
  "radio.onReceivedNumber": "Registra o código a ser executado quando o rádio recebe um número.",
  "radio.onReceivedNumberDeprecated": "Registra o código a ser executado quando o rádio recebe um número. Obsoleto, use\nonReceivedNumber em vez disso.",
  "radio.onReceivedString": "Registra o código a ser executado quando o rádio recebe uma string.",
  "radio.onReceivedStringDeprecated": "Registra o código a ser executado quando o rádio recebe um texto",
  "radio.onReceivedValue": "Registra o código a ser executado quando o rádio recebe um par de valores-chave.",
  "radio.onReceivedValueDeprecated": "Registra o código a ser executado quando o rádio recebe um par de valores-chave.",
  "radio.raiseEvent": "Sends an event over radio to neigboring devices",
  "radio.readRawPacket": "Internal use only. Takes the next packet from the radio queue and returns its contents + RSSI in a Buffer.\n@returns NULL if no packet available",
  "radio.receiveNumber": "Reads the next packet from the radio queue and returns the packet's number\npayload or 0 if the packet did not contain a number.",
  "radio.receiveString": "Reads the next packet from the radio queue and returns the packet's string\npayload or the empty string if the packet did not contain a string.",
  "radio.receivedBuffer": "Returns the buffer payload from the last packet taken from the radio queue\n(via ``receiveNumber``, ``receiveString``, etc) or the empty string if that\npacket did not contain a string.",
  "radio.receivedNumber": "Returns the number payload from the last packet taken from the radio queue\n(via ``receiveNumber``, ``receiveString``, etc) or 0 if that packet did not\ncontain a number.",
  "radio.receivedPacket": "Retorna propriedades do último pacote de rádio recebido.",
  "radio.receivedPacket|param|type": "o tipo de propriedade a ser recuperada do último pacote",
  "radio.receivedSerial": "Returns the serial number of the sender micro:bit from the last packet taken\nfrom the radio queue (via ``receiveNumber``, ``receiveString``, etc) or 0 if\nthat packet did not send a serial number.",
  "radio.receivedSignalStrength": "Gets the received signal strength indicator (RSSI) from the last packet taken\nfrom the radio queue (via ``receiveNumber``, ``receiveString``, etc). Not supported in simulator.",
  "radio.receivedString": "Returns the string payload from the last packet taken from the radio queue\n(via ``receiveNumber``, ``receiveString``, etc) or the empty string if that\npacket did not contain a string.",
  "radio.receivedTime": "Returns the system time of the sender micro:bit at the moment when it sent the\nlast packet taken from the radio queue (via ``receiveNumber``,\n``receiveString``, etc).",
  "radio.sendBuffer": "Broadcasts a buffer (up to 19 bytes long) along with the device serial number\nand running time to any connected micro:bit in the group.",
  "radio.sendNumber": "Transmite um número através de rádio para qualquer micro:bit conectado no grupo.",
  "radio.sendRawPacket": "Internal use only. Sends a raw packet through the radio (assumes RSSI appened to packet)",
  "radio.sendString": "Transmite uma string junto com o número de série do dispositivo\ne tempo de execução para qualquer micro:bit conectado no grupo.",
  "radio.sendValue": "Transmite um par nome/valor junto com o número de série do dispositivo\ne tempo de execução para qualquer micro:bit conectado no grupo. \nO nome pode incluir no máximo 8 caracteres.",
  "radio.sendValue|param|name": "o nome do campo (máximo de 8 caracteres), por exemplo: \"nome\"",
  "radio.sendValue|param|value": "o valor númerico",
  "radio.setFrequencyBand": "Change the transmission and reception band of the radio to the given channel",
  "radio.setFrequencyBand|param|band": "a frequency band in the range 0 - 83. Each step is 1MHz wide, based at 2400MHz.",
  "radio.setGroup": "Define o ID do grupo para comunicações por rádio. Um micro:bit só pode escutar um ID de grupo por vez.",
  "radio.setGroup|param|id": "o ID do grupo, entre ``0`` e ``255``, ex: 1",
  "radio.setTransmitPower": "Change the output power level of the transmitter to the given value.",
  "radio.setTransmitPower|param|power": "a value in the range 0..7, where 0 is the lowest power and 7 is the highest. eg: 7",
  "radio.setTransmitSerialNumber": "Set the radio to transmit the serial number in each message.",
  "radio.setTransmitSerialNumber|param|transmit": "value indicating if the serial number is transmitted, eg: true",
  "radio.writeReceivedPacketToSerial": "Writes the last received packet to serial as JSON. This should be called\nwithin an ``onDataPacketReceived`` callback.",
  "radio.writeValueToSerial": "Reads the next packet from the radio queue and and writes it to serial\nas JSON."
}