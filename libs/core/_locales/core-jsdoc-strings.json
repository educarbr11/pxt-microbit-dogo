{
  "AcceleratorRange.EightG": "The accelerator measures forces up to 8 gravity",
  "AcceleratorRange.FourG": "The accelerator measures forces up to 4 gravity",
  "AcceleratorRange.OneG": "The accelerator measures forces up to 1 gravity",
  "AcceleratorRange.TwoG": "The accelerator measures forces up to 2 gravity",
  "Array": "Add, remove, and replace items in lists.",
  "Array._pickRandom": "Retorna um valor aleatório do array",
  "Array._popStatement": "Remove o último elemento de um array e o retorna.",
  "Array._removeAtStatement": "Remove o elemento em um índice específico.",
  "Array._shiftStatement": "Remove o primeiro elemento de um array e o retorna. Este método altera o comprimento do array.",
  "Array._unshiftStatement": "Adiciona um elemento ao início de um array e retorna o novo comprimento do array.",
  "Array.concat": "Concatenates the values with another array.",
  "Array.concat|param|arr": "The other array that is being concatenated with",
  "Array.every": "Tests whether all elements in the array pass the test implemented by the provided function.",
  "Array.every|param|callbackfn": "A function that accepts up to two arguments. The every method calls the callbackfn function one time for each element in the array.",
  "Array.fill": "Fills all the elements of an array from a start index to an end index with a static value. The end index is not included.",
  "Array.filter": "Return the elements of an array that meet the condition specified in a callback function.",
  "Array.filter|param|callbackfn": "A function that accepts up to two arguments. The filter method calls the callbackfn function one time for each element in the array.",
  "Array.find": "Returns the value of the first element in the array that satisfies the provided testing function. Otherwise undefined is returned.",
  "Array.forEach": "Call a defined callback function on each element of an array.",
  "Array.forEach|param|callbackfn": "A function that accepts up to two arguments. The forEach method calls the callbackfn function one time for each element in the array.",
  "Array.get": "Get the value at a particular index",
  "Array.get|param|index": "the zero-based position in the list of the item, eg: 0",
  "Array.indexOf": "Retorna o índice da primeira ocorrência de um valor em um array.",
  "Array.indexOf|param|fromIndex": "O índice do array onde começar a busca. Se omitido, a busca começa no índice 0.",
  "Array.indexOf|param|item": "O valor a ser localizado no array.",
  "Array.insertAt": "Insere o valor em um índice específico, aumentando o comprimento em 1.",
  "Array.insertAt|param|index": "a posição baseada em zero na lista para inserir o valor, por exemplo: 0",
  "Array.insertAt|param|value": "o valor a ser inserido, por exemplo: 0",
  "Array.isArray": "Check if a given object is an array.",
  "Array.join": "joins all elements of an array into a string and returns this string.",
  "Array.join|param|sep": "the string separator",
  "Array.length": "Get or set the length of an array. This number is one more than the index of the last element the array.",
  "Array.map": "Call a defined callback function on each element of an array, and return an array containing the results.",
  "Array.map|param|callbackfn": "A function that accepts up to two arguments. The map method calls the callbackfn function one time for each element in the array.",
  "Array.pop": "Remova o último elemento de um array e retorne-o.",
  "Array.push": "Adiciona um novo elemento a um array.",
  "Array.reduce": "Call the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
  "Array.reduce|param|callbackfn": "A function that accepts up to three arguments. The reduce method calls the callbackfn function one time for each element in the array.",
  "Array.reduce|param|initialValue": "Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",
  "Array.removeAt": "Remove e retorna o elemento em um determinado índice.",
  "Array.removeElement": "Remove the first occurence of an object. Returns true if removed.",
  "Array.reverse": "Inverte os elementos de um array. O primeiro elemento do array se torna o último, e o último elemento do array se torna o primeiro.",
  "Array.set": "Store a value at a particular index",
  "Array.set|param|index": "the zero-based position in the list to store the value, eg: 0",
  "Array.set|param|value": "the value to insert, eg: 0",
  "Array.shift": "Remove o primeiro elemento de um array e o retorna. Este método altera o tamanho do array.",
  "Array.slice": "Return a section of an array.",
  "Array.slice|param|end": "The end of the specified portion of the array. eg: 0",
  "Array.slice|param|start": "The beginning of the specified portion of the array. eg: 0",
  "Array.some": "Tests whether at least one element in the array passes the test implemented by the provided function.",
  "Array.some|param|callbackfn": "A function that accepts up to two arguments. The some method calls the callbackfn function one time for each element in the array.",
  "Array.sort": "Sort the elements of an array in place and returns the array. The sort is not necessarily stable.",
  "Array.splice": "Remove elements from an array.",
  "Array.splice|param|deleteCount": "The number of elements to remove. eg: 0",
  "Array.splice|param|start": "The zero-based location in the array from which to start removing elements. eg: 0",
  "Array.unshift": "Adiciona um elemento ao início de um array e retorna o novo comprimento do array.",
  "Array@type": "Add, remove, and replace items in lists.",
  "Boolean.toString": "Returns a string representation of an object.",
  "Buffer.chunked": "Splits buffer into parts no larger than specified",
  "Buffer.concat": "Return concatenation of current buffer and the given buffer\n\nConcatenates all buffers in the list",
  "Buffer.create": "Allocate a new buffer.",
  "Buffer.create|param|size": "number of bytes in the buffer",
  "Buffer.equals": "Returns true if this and the other buffer hold the same data",
  "Buffer.fill": "Fill (a fragment) of the buffer with given value.",
  "Buffer.fromArray": "Create a new buffer initialized to bytes from given array.",
  "Buffer.fromArray|param|bytes": "data to initialize with",
  "Buffer.fromBase64": "Create a new buffer, decoding a Base64 string",
  "Buffer.fromHex": "Create a new buffer, decoding a hex string",
  "Buffer.fromUTF8": "Create a new buffer from an UTF8-encoded string",
  "Buffer.fromUTF8|param|str": "the string to put in the buffer",
  "Buffer.getNumber": "Read a number in specified format from the buffer.",
  "Buffer.getUint8": "Reads an unsigned byte at a particular location",
  "Buffer.hash": "Compute k-bit FNV-1 non-cryptographic hash of the buffer.",
  "Buffer.indexOf": "Return position of other buffer in current buffer",
  "Buffer.isReadOnly": "Returns false when the buffer can be written to.",
  "Buffer.length": "Returns the length of a Buffer object.",
  "Buffer.packAt": "Writes numbers to the buffer according to the format",
  "Buffer.rotate": "Rotate buffer left in place.\n\n\n\nstart. eg: -1",
  "Buffer.rotate|param|length": "number of elements in buffer. If negative, length is set as the buffer length minus",
  "Buffer.rotate|param|offset": "number of bytes to shift; use negative value to shift right",
  "Buffer.rotate|param|start": "start offset in buffer. Default is 0.",
  "Buffer.setNumber": "Write a number in specified format in the buffer.",
  "Buffer.setUint8": "Writes an unsigned byte at a particular location",
  "Buffer.shift": "Shift buffer left in place, with zero padding.\n\n\n\nstart. eg: -1",
  "Buffer.shift|param|length": "number of elements in buffer. If negative, length is set as the buffer length minus",
  "Buffer.shift|param|offset": "number of bytes to shift; use negative value to shift right",
  "Buffer.shift|param|start": "start offset in buffer. Default is 0.",
  "Buffer.sizeOfNumberFormat": "Get the size in bytes of specified number format.",
  "Buffer.slice": "Return a copy of a fragment of a buffer.",
  "Buffer.toArray": "Read contents of buffer as an array in specified format",
  "Buffer.toBase64": "Convert buffer to ASCII base64 encoding.",
  "Buffer.toHex": "Convert a buffer to its hexadecimal representation.",
  "Buffer.toString": "Convert a buffer to string assuming UTF8 encoding",
  "Buffer.unpack": "Reads numbers from the buffer according to the format",
  "Buffer.write": "Write contents of `src` at `dstOffset` in current buffer.",
  "EventCreationMode": "How to create the event.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent is initialised, and its event handlers are immediately fired (not suitable for use in interrupts!).",
  "EventCreationMode.CreateOnly": "MicroBitEvent is initialised, and no further processing takes place.",
  "Gesture.EightG": "Raised when a 8G shock is detected",
  "Gesture.FreeFall": "Raised when the board is falling!",
  "Gesture.LogoDown": "Raised when the logo is downward and the screen is vertical",
  "Gesture.LogoUp": "Raised when the logo is upward and the screen is vertical",
  "Gesture.ScreenDown": "Raised when the screen is pointing down and the board is horizontal",
  "Gesture.ScreenUp": "Raised when the screen is pointing up and the board is horizontal",
  "Gesture.Shake": "Raised when shaken",
  "Gesture.SixG": "Raised when a 6G shock is detected",
  "Gesture.ThreeG": "Raised when a 3G shock is detected",
  "Gesture.TiltLeft": "Raised when the screen is pointing left",
  "Gesture.TiltRight": "Raised when the screen is pointing right",
  "Image.clear": "Desliga todos os leds",
  "Image.height": "Altura da coluna (5)",
  "Image.pixel": "Obtém o estado do pixel na posição ``(x, y)``",
  "Image.pixelBrightness": "Obtém o brilho do pixel ([0..255]) em uma determinada posição",
  "Image.pixel|param|x": "coluna do pixel",
  "Image.pixel|param|y": "linha do pixel",
  "Image.plotFrame": "Desenha o ``índice``-ésimo quadro da imagem na tela.",
  "Image.plotFrame|param|xOffset": "índice da coluna para começar a exibir a imagem",
  "Image.plotImage": "Plots the image at a given column to the screen",
  "Image.scrollImage": "Rola uma imagem.",
  "Image.scrollImage|param|frameOffset": "deslocamento x movido a cada passo da animação, por exemplo: 1, 2, 5",
  "Image.scrollImage|param|interval": "tempo entre cada passo da animação em milissegundos, por exemplo: 200",
  "Image.setPixel": "Define o estado de um pixel na posição ``(x, y)``",
  "Image.setPixelBrightness": "Define um brilho de pixel específico em uma determinada posição",
  "Image.setPixel|param|value": "estado do pixel",
  "Image.setPixel|param|x": "coluna do pixel",
  "Image.setPixel|param|y": "linha do pixel",
  "Image.showFrame": "Exibe um quadro específico da tira de imagens.",
  "Image.showFrame|param|frame": "quadro da imagem a ser exibido",
  "Image.showImage": "Mostra um quadro da imagem no deslocamento ``x offset``.",
  "Image.showImage|param|interval": "tempo em milissegundos para pausar após desenhar",
  "Image.showImage|param|xOffset": "índice da coluna para começar a exibir a imagem",
  "Image.width": "Largura da coluna",
  "Infinity": "Constant representing positive infinity.",
  "JSON.parse": "Converts a JavaScript Object Notation (JSON) string into an object.",
  "JSON.stringify": "Converts a JavaScript value to a JavaScript Object Notation (JSON) string.",
  "JSON.stringify|param|indent": "Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.",
  "JSON.stringify|param|replacer": "Not supported; use null.",
  "JSON.stringify|param|value": "A JavaScript value, usually an object or array, to be converted.",
  "Math": "More complex operations with numbers.",
  "Math.abs": "Returns the absolute value of a number (the value without regard to whether it is positive or negative).\nFor example, the absolute value of -5 is the same as the absolute value of 5.",
  "Math.abs|param|x": "A numeric expression for which the absolute value is needed.",
  "Math.acos": "Returns the arccosine (in radians) of a number",
  "Math.acos|param|x": "A number",
  "Math.asin": "Returns the arcsine (in radians) of a number",
  "Math.asin|param|x": "A number",
  "Math.atan": "Returns the arctangent (in radians) of a number",
  "Math.atan2": "Returns the arctangent of the quotient of its arguments.",
  "Math.atan2|param|x": "A number",
  "Math.atan2|param|y": "A number",
  "Math.atan|param|x": "A number",
  "Math.ceil": "Returns the smallest number greater than or equal to its numeric argument.",
  "Math.ceil|param|x": "A numeric expression.",
  "Math.constrain": "Restringe um número para estar dentro de um intervalo específico.",
  "Math.constrain|param|high": "o limite superior do intervalo, todos os tipos de dados são aceitos",
  "Math.constrain|param|low": "o limite inferior do intervalo, todos os tipos de dados são aceitos",
  "Math.constrain|param|value": "o número a ser limitado, todos os tipos de dados são aceitos",
  "Math.cos": "Returns the cosine of a number.",
  "Math.cos|param|x": "An angle in radians",
  "Math.exp": "Returns returns ``e^x``.",
  "Math.exp|param|x": "A number",
  "Math.floor": "Returns the greatest number less than or equal to its numeric argument.",
  "Math.floor|param|x": "A numeric expression.",
  "Math.icos": "Returns the cosine of an input angle. This is an 8-bit approximation.",
  "Math.icos|param|theta": "input angle from 0-255",
  "Math.idiv": "Returns the value of integer signed 32 bit division of two numbers.",
  "Math.idiv|param|x": "The first number",
  "Math.idiv|param|y": "The second number",
  "Math.imul": "Returns the value of integer signed 32 bit multiplication of two numbers.",
  "Math.imul|param|x": "The first number",
  "Math.imul|param|y": "The second number",
  "Math.isin": "Returns the sine of an input angle. This is an 8-bit approximation.",
  "Math.isin|param|theta": "input angle from 0-255",
  "Math.log": "Returns the natural logarithm (base e) of a number.",
  "Math.log|param|x": "A number",
  "Math.map": "Re-mapeia um número de um intervalo para outro. Por exemplo, um valor no intervalo \"de mínimo\" será mapeado para \"para mínimo\", um valor no intervalo \"de máximo\" será mapeado para \"para máximo\", e valores intermediários serão ajustados proporcionalmente.",
  "Math.map|param|fromHigh": "o limite superior do intervalo atual do valor, ex: 1023",
  "Math.map|param|fromLow": "o limite inferior do intervalo atual do valor",
  "Math.map|param|toHigh": "o limite superior do intervalo de destino, ex: 4",
  "Math.map|param|toLow": "o limite inferior do intervalo de destino",
  "Math.map|param|value": "valor a ser mapeado entre os intervalos",
  "Math.max": "Returns the larger of two supplied numeric expressions.",
  "Math.min": "Returns the smaller of two supplied numeric expressions.",
  "Math.pow": "Returns the value of a base expression taken to a specified power.",
  "Math.pow|param|x": "The base value of the expression.",
  "Math.pow|param|y": "The exponent value of the expression.",
  "Math.random": "Returns a pseudorandom number between 0 and 1.",
  "Math.randomBoolean": "Gera um valor `verdadeiro` ou `falso` aleatoriamente, como jogar um moeda",
  "Math.randomRange": "Returns a pseudorandom number between min and max included.\nIf both numbers are integral, the result is integral.",
  "Math.randomRange|param|max": "the upper inclusive bound, eg: 10",
  "Math.randomRange|param|min": "the lower inclusive bound, eg: 0",
  "Math.round": "Returns a supplied numeric expression rounded to the nearest number.",
  "Math.roundWithPrecision": "Rounds ``x`` to a number with the given number of ``digits``",
  "Math.roundWithPrecision|param|digits": "the number of resulting digits",
  "Math.roundWithPrecision|param|x": "the number to round",
  "Math.round|param|x": "The value to be rounded to the nearest number.",
  "Math.sign": "Returns the sign of the x, indicating whether x is positive, negative or zero.",
  "Math.sign|param|x": "The numeric expression to test",
  "Math.sin": "Returns the sine of a number.",
  "Math.sin|param|x": "An angle in radians",
  "Math.sqrt": "Returns the square root of a number.",
  "Math.sqrt|param|x": "A numeric expression.",
  "Math.tan": "Returns the tangent of a number.",
  "Math.tan|param|x": "An angle in radians",
  "Math.trunc": "Returns the number with the decimal part truncated.",
  "Math.trunc|param|x": "A numeric expression.",
  "NaN": "Constant representing Not-A-Number.",
  "Number.isNaN": "Check if a given value is of type Number and it is a NaN.",
  "Number.toString": "Returns a string representation of a number.",
  "Object.keys": "Return the field names in an object.",
  "SoundExpression": "A sound expression.",
  "SoundExpression.play": "Starts to play a sound expression.",
  "SoundExpression.playUntilDone": "Plays a sound expression until finished",
  "String": "Combine, split, and search text strings.",
  "String.charAt": "Retorna o caractere no índice especificado.",
  "String.charAt|param|index": "O índice baseado em zero do caractere desejado.",
  "String.charCodeAt": "Retorna o valor Unicode do caractere na localização especificada.",
  "String.charCodeAt|param|index": "O índice baseado em zero do caractere desejado. Se não houver caractere no índice especificado, é retornado NaN.",
  "String.compare": "Compara a ordem dos caracteres em duas strings (na codificação ASCII).",
  "String.compare|param|that": "String para comparar com a string alvo",
  "String.concat": "Returns a string that contains the concatenation of two or more strings.",
  "String.concat|param|other": "The string to append to the end of the string.",
  "String.fromCharCode": "Cria uma string a partir do código do caractere ASCII fornecido.",
  "String.includes": "Determina se uma string contém os caracteres de uma string especificada.",
  "String.includes|param|searchValue": "o texto a ser encontrado",
  "String.includes|param|start": "índice de início opcional para a busca",
  "String.indexOf": "Retorna a posição da primeira ocorrência de um valor especificado em uma string.",
  "String.indexOf|param|searchValue": "o texto a ser encontrado",
  "String.indexOf|param|start": "índice opcional de início para a busca",
  "String.isEmpty": "Retorna um valor indicando se a string está vazia",
  "String.length": "Returns the length of a String object.",
  "String.replace": "Return the current string with the first occurence of toReplace\nreplaced with the replacer\n\n\nor a function that accepts the substring and returns the replacement string.",
  "String.replaceAll": "Return the current string with each occurence of toReplace\nreplaced with the replacer\n\n\nor a function that accepts the substring and returns the replacement string.",
  "String.replaceAll|param|replacer": "either the string that replaces toReplace in the current string,",
  "String.replaceAll|param|toReplace": "the substring to replace in the current string",
  "String.replace|param|replacer": "either the string that replaces toReplace in the current string,",
  "String.replace|param|toReplace": "the substring to replace in the current string",
  "String.slice": "Return a substring of the current string.",
  "String.slice|param|end": "one-past-last character index",
  "String.slice|param|start": "first character index; can be negative from counting from the end, eg:0",
  "String.split": "Divide a string de acordo com os separadores.",
  "String.split|param|separator": "@param limit",
  "String.substr": "Retorna uma substring da string atual.",
  "String.substr|param|length": "número de caracteres a serem extraídos, ex: 10",
  "String.substr|param|start": "índice do primeiro caractere; pode ser negativo para contar a partir do final, ex: 0",
  "String.toLowerCase": "Converts the string to lower case characters.",
  "String.toUpperCase": "Converts the string to upper case characters.",
  "String.trim": "Return a substring of the current string with whitespace removed from both ends",
  "String@type": "Combine, split, and search text strings.",
  "StringMap": "A dictionary from string key to string values",
  "TouchButtonEvent": "Uma ação para o toque do botão",
  "_py.range": "Returns a sequence of numbers up to but not including the limit\n\nIf more than one argument is passed, this argument is instead used for the first value in the range",
  "_py.range|param|first": "The value to end the sequence before. This value will not show up in the result.",
  "_py.range|param|step": "The value to increase or decrease by for each step in the range. Must be a nonzero integer",
  "_py.range|param|stop": "The value to end the sequence before. This value will not show up in the result",
  "_py.slice": "Returns a section of an array according to python's extended slice syntax",
  "_py.stringSlice": "Returns a section of a string according to python's extended slice syntax",
  "basic": "Dá acesso às funções básicas do micro:bit.",
  "basic.clearScreen": "Desligar todos os LEDs",
  "basic.forever": "Repete o código em segundo plano sem parar. A cada repetição, permite que outros códigos sejam executados.",
  "basic.pause": "Pausa por um período especificado em milissegundos",
  "basic.pause|param|ms": "a duração da pausa, por exemplo: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Desenha uma imagem na tela de LED.",
  "basic.plotLeds|param|leds": "padrão de LEDs para ligar/desligar",
  "basic.showAnimation": "Exibe uma sequência de telas de LED como uma animação.",
  "basic.showAnimation|param|interval": "tempo em milissegundos entre cada redesenho",
  "basic.showAnimation|param|leds": "padrão de LEDs para ligar/desligar",
  "basic.showArrow": "Draws an arrow on the LED screen",
  "basic.showArrow|param|direction": "the direction of the arrow",
  "basic.showArrow|param|interval": "o tempo (em milissegundos) que o ícone será exibido. O padrão é 600.",
  "basic.showIcon": "Desenha o ícone selecionado na tela de LED",
  "basic.showIcon|param|icon": "the predefined icon id",
  "basic.showIcon|param|interval": "o tempo (em milissegundos) que o ícone será exibido. O padrão é 600.",
  "basic.showLeds": "Desenha uma imagem na tela de LED.",
  "basic.showLeds|param|interval": "time in milliseconds to pause after drawing.",
  "basic.showLeds|param|leds": "the pattern of LED to turn on/off.",
  "basic.showNumber": "Mover um número na tela. Se o número se ajustar na tela (ou seja, é um único dígito), não mover.",
  "basic.showNumber|param|interval": "speed of scroll; eg: 150, 100, 200, -100",
  "basic.showString": "Mostrar texto na tela, um caracteres por vez. Se a cadeia de caracteres se ajustar na tela (ou seja, é uma letra), não mover.",
  "basic.showString|param|interval": "how fast to shift characters; eg: 150, 100, 200, -100",
  "basic.showString|param|text": "the text to scroll on the screen, eg: \"Olá, Mundo!\"",
  "console": "Reading and writing data to the console output.",
  "console.addListener": "Adds a listener for the log messages",
  "console.inspect": "Convert any object or value to a string representation",
  "console.inspect|param|maxElements": "[optional] max number values in an object to include in output",
  "console.inspect|param|obj": "value to be converted to a string",
  "console.log": "Write a line of text to the console output.",
  "console.logValue": "Write a name:value pair as a line of text to the console output.",
  "console.logValue|param|name": "name of the value stream, eg: \"x\"",
  "console.logValue|param|value": "to write",
  "console.log|param|value": "to send",
  "console.minPriority": "Minimum priority to send messages to listeners",
  "console.removeListener": "Removes a listener",
  "control": "Runtime and event utilities.",
  "control._hardwareVersion": "Returns the major version of the microbit",
  "control.allocateEventSource": "Incrementally allocates event source identifiers.",
  "control.allocateNotifyEvent": "Allocates the next user notification event",
  "control.assert": "If the condition is false, display msg on serial console, and panic with code 098.",
  "control.benchmark": "Runs the function and returns run time in microseconds.",
  "control.compareVersion": "Given two versions, returns -1 if the first version is less than\nthe second, 1 if it's greater, and 0 if it's the same.",
  "control.createBuffer": "Create a new zero-initialized buffer.",
  "control.createBufferFromUTF8": "Create a new buffer with UTF8-encoded string",
  "control.createBufferFromUTF8|param|str": "the string to put in the buffer",
  "control.createBuffer|param|size": "number of bytes in the buffer",
  "control.deviceLongSerialNumber": "Derive a unique, consistent 64-bit serial number of this device from internal data.",
  "control.deviceName": "Cria um nome amigável para o dispositivo com base no seu número de série.",
  "control.deviceSerialNumber": "Deriva um número de série único e consistente para este dispositivo a partir de dados internos.",
  "control.dmesg": "Write a message to DMESG debugging buffer.",
  "control.dmesgPerfCounters": "Dump values of profiling performance counters.",
  "control.dmesgPtr": "Write a message and value (pointer) to DMESG debugging buffer.",
  "control.enablePerfCounter": "Enable profiling for current function.",
  "control.eventSourceId": "Returns the value of a C++ runtime constant",
  "control.eventTimestamp": "Obtém o carimbo de tempo do último evento executado no barramento.",
  "control.eventValue": "Obtém o valor do último evento executado no barramento.",
  "control.eventValueId": "Returns the value of a C++ runtime constant",
  "control.gc": "Force GC and dump basic information about heap.",
  "control.gcStats": "Get various statistics about the garbage collector (GC)",
  "control.heapDump": "Force GC and halt waiting for debugger to do a full heap dump.",
  "control.heapSnapshot": "Record a heap snapshot to debug memory leaks.",
  "control.inBackground": "Agenda código executado em segundo plano.",
  "control.micros": "Gets current time in microseconds. Overflows every ~18 minutes.",
  "control.millis": "Obtém o número de milissegundos decorridos desde a inicialização.",
  "control.onEvent": "Registra um manipulador de eventos.",
  "control.panic": "Display specified error code and stop the program.",
  "control.profilingEnabled": "Return true if profiling is enabled in the current build.",
  "control.raiseEvent": "Gera um evento no barramento de eventos.",
  "control.raiseEvent|param|mode": "definição opcional de como o evento deve ser processado após a construção (padrão é CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "ID do componente MicroBit que gerou o evento, ex: MICROBIT_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Código específico do componente indicando a causa do evento.",
  "control.ramSize": "Returns estimated size of memory in bytes.",
  "control.reset": "Reseta o BBC micro:bit.",
  "control.runInParallel": "Run other code in the parallel.",
  "control.runtimeWarning": "Display warning in the simulator.",
  "control.setDebugFlags": "Set flags used when connecting an external debugger.",
  "control.simmessages.onReceived": "Registers the handler for a message on a given channel",
  "control.singleSimulator": "Allow only one simulator",
  "control.waitForEvent": "Bloqueia o thread de chamada até que o evento especificado seja gerado.",
  "control.waitMicros": "Bloqueia a fibra atual durante os microssegundos determinados",
  "control.waitMicros|param|micros": "number of micro-seconds to wait. eg: 4",
  "convertToText": "Converter qualquer valor númerico para texto",
  "convertToText|param|value": "valor a ser convertido",
  "forever": "Repeats the code forever in the background. On each iteration, allows other codes to run.",
  "game": "A single-LED sprite game engine",
  "game.LedSprite": "Cria um ator do jogo renderizado como um único LED.",
  "game.LedSprite.blink": "Relata a duração do ``piscar`` de um ator.",
  "game.LedSprite.brightness": "Informa o ``brilho`` de um ator na tela de LED",
  "game.LedSprite.change": "Altera uma propriedade do ator",
  "game.LedSprite.changeBlinkBy": "Altera a duração do ``piscar`` pela quantidade de milissegundos fornecida.",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "Altera a posição ``y`` pela quantidade dada",
  "game.LedSprite.changeBrightnessBy|param|value": "o valor para alterar o brilho",
  "game.LedSprite.changeDirectionBy": "Altera a posição da ``direção`` pela quantidade dada, girando para a direita",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "Altera a posição ``x`` pelo valor fornecido",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "Altera a posição ``y`` pelo valor fornecido",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "o nome da propriedade a ser alterada",
  "game.LedSprite.change|param|value": "a quantidade de alteração, ex: 1",
  "game.LedSprite.delete": "Exclui o ator do mecanismo de jogo. O ator não aparecerá mais na tela nem interagirá com outros atores.",
  "game.LedSprite.direction": "Relata a direção atual de um ator",
  "game.LedSprite.get": "Obtém uma propriedade do ator",
  "game.LedSprite.get|param|property": "o nome da propriedade a ser obtida",
  "game.LedSprite.goTo": "Vai para uma posição específica na tela.",
  "game.LedSprite.goTo|param|x": "a posição horizontal (0-4)",
  "game.LedSprite.goTo|param|y": "a posição vertical (0-4)",
  "game.LedSprite.ifOnEdgeBounce": "Se o ator estiver tocando a borda da tela e estiver indo na direção da borda, ele vira para o lado oposto.",
  "game.LedSprite.isDeleted": "Informa se o ator foi excluído do mecanismo de jogo.",
  "game.LedSprite.isTouching": "Retorna verdadeiro se o ator estiver na mesma posição que o ator especificado",
  "game.LedSprite.isTouchingEdge": "Retorna verdadeiro se o ator estiver tocando a borda",
  "game.LedSprite.isTouching|param|other": "o outro ator para verificar sobreposição ou toque",
  "game.LedSprite.move": "Move a certa quantidade de LEDs na direção atual.",
  "game.LedSprite.move|param|leds": "número de LEDs a mover, ex: 1, -1",
  "game.LedSprite.off": "Desliga o ator (ligado por padrão)",
  "game.LedSprite.on": "Liga o ator (ligado por padrão)",
  "game.LedSprite.set": "Define uma propriedade do ator",
  "game.LedSprite.setBlink": "Define o intervalo de duração do piscar em milissegundos.",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "Define o ``brilho`` de um ator",
  "game.LedSprite.setDirection": "Define a direção do ator atual, arredondada para o múltiplo mais próximo de 45",
  "game.LedSprite.setDirection|param|degrees": "nova direção em graus",
  "game.LedSprite.setX": "Define a posição ``x`` de um ator",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "Define a posição ``y`` de um ator",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "o nome da propriedade a ser alterada",
  "game.LedSprite.set|param|value": "o valor atualizado",
  "game.LedSprite.turn": "Vira o ator",
  "game.LedSprite.turnLeft": "Vira para a esquerda (anti-horário)",
  "game.LedSprite.turnLeft|param|degrees": "ângulo em graus para virar, ex: 45, 90, 180, 135",
  "game.LedSprite.turnRight": "Vira para a direita (horário)",
  "game.LedSprite.turnRight|param|degrees": "ângulo em graus para virar, ex: 45, 90, 180, 135",
  "game.LedSprite.turn|param|degrees": "ângulo em graus para virar, ex: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "esquerda ou direita",
  "game.LedSprite.x": "Relata a posição ``x`` de um ator na tela de LEDs",
  "game.LedSprite.y": "Relata a posição ``y`` de um ator na tela de LEDs",
  "game.addLife": "Adiciona pontos de vida ao total atual.",
  "game.addLife|param|lives": "quantidade de vidas a adicionar.",
  "game.addScore": "Adiciona pontos à pontuação atual e exibe uma animação.",
  "game.addScore|param|points": "quantidade de pontos para alterar, ex: 1",
  "game.createSprite": "Cria um novo ator de LED apontando para a direita.",
  "game.createSprite|param|x": "coordenada horizontal do ator, ex: 2",
  "game.createSprite|param|y": "coordenada vertical do ator, ex: 2",
  "game.currentTime": "Obtém o tempo restante (desde o início da contagem regressiva) ou o tempo atual (desde que o dispositivo foi iniciado ou desde o início do cronômetro) em milissegundos.",
  "game.gameOver": "Exibe uma animação de fim de jogo e a pontuação.",
  "game.invalidSprite": "Obtém um ator inválido; usado para inicializar variáveis locais.",
  "game.isGameOver": "Indica se o jogo acabou e exibe a sequência de game over.",
  "game.isPaused": "Indica se a renderização do jogo está pausada para permitir outras animações.",
  "game.isRunning": "Indica se o jogo ainda está em andamento. Retorna `false` se o jogo estiver terminado ou pausado.",
  "game.level": "Pega o valor de level atual",
  "game.levelUp": "Incrementa o nível e exibe uma mensagem.",
  "game.life": "Pega o estado de vida atual",
  "game.pause": "Indica se a renderização do jogo está pausada para permitir outras animações.",
  "game.removeLife": "Remove uma quantidade de vidas.",
  "game.removeLife|param|life": "quantidade de vidas a ser removida",
  "game.resume": "Retoma o mecanismo de renderização do jogo",
  "game.score": "Pega a pontuação atual",
  "game.setLife": "Define o valor atual de vidas.",
  "game.setLife|param|value": "valor atual de vidas.",
  "game.setScore": "Define o valor atual da pontuação.",
  "game.setScore|param|value": "novo valor da pontuação.",
  "game.showScore": "Exibe a pontuação na tela.",
  "game.startCountdown": "Mostra uma animação e, em seguida, inicia um cronômetro regressivo, que causa Game Over quando chega a 0.",
  "game.startCountdown|param|ms": "duração do cronômetro regressivo em milissegundos, ex: 10000",
  "game.startStopwatch": "Inicia um cronômetro. `current time` retornará o tempo decorrido.",
  "helpers.arrayPickRandom": "Return a random value from the array",
  "hex": "Tagged hex literal converter",
  "images": "Creation, manipulation and display of LED images.",
  "images.createBigImage": "Cria uma imagem com 2 quadros.",
  "images.createImage": "Cria uma imagem que se ajusta à tela de LEDs.",
  "input": "Events and data from sensors",
  "input.acceleration": "Obter o valor de aceleração em mili-gravidade (quando a placa está na posição horizontal com a tela para cima, x=0, y=0 e z=1024)",
  "input.acceleration|param|dimension": "x, y, or z dimension, eg: Dimension.X",
  "input.buttonIsPressed": "Obter o estado do botão (pressionado ou não) para ``A`` e ``B``.",
  "input.buttonIsPressed|param|button": "o botão para consultar a solicitação, por exemplo: Botão.A",
  "input.calibrate": "Obsolete, use input.calibrateCompass instead.",
  "input.calibrateCompass": "Obsoleto, a calibração da bússola é automática.",
  "input.compassHeading": "Obter a orientação atual em graus.",
  "input.isGesture": "Testa se um gesto foi detectado no momento.",
  "input.isGesture|param|gesture": "the type of gesture to detect, eg: Gesture.Shake",
  "input.lightLevel": "Lê o nível de luz aplicado à tela de LED em um alcance de ``0`` (escuro) a ``255`` (claro).",
  "input.logoIsPressed": "Obtenha o estado do logotipo (pressionado ou não).",
  "input.magneticForce": "Obter o valor da força magnética em ``micro-Teslas`` (``µT``). Esta função não é suportada no simulador.",
  "input.magneticForce|param|dimension": "the x, y, or z dimension, eg: Dimension.X",
  "input.onButtonPressed": "Fazer algo quando um botão (A, B ou A + B) for pressionado e liberado novamente.",
  "input.onButtonPressed|param|body": "código a ser executado quando o evento for criado",
  "input.onButtonPressed|param|button": "o botão que precisa ser pressionado",
  "input.onGesture": "Fazer algo quando um gesto for concluído (com agitar o micro:bit)",
  "input.onGesture|param|body": "código a ser executado quando o gesto for criado",
  "input.onGesture|param|gesture": "o tipo de gesto a monitorar, por exemplo: Gesture.Shake",
  "input.onLogoDown": "Anexa o código a ser executado quando o logo estiver orientado para baixo e a placa estiver na vertical.",
  "input.onLogoDown|param|body": "TODO",
  "input.onLogoEvent": "Faça algo quando o logotipo for tocado e liberado novamente.",
  "input.onLogoEvent|param|body": "o código a ser executado quando o logotipo é pressionado",
  "input.onLogoUp": "Anexa o código a ser executado quando o logo estiver orientado para cima e a placa estiver na vertical.",
  "input.onLogoUp|param|body": "TODO",
  "input.onPinPressed": "Fazer algo quando um pin for tocado e liberado novamente (enquanto também toca no pin GND).",
  "input.onPinPressed|param|body": "o código a ser executado quando o pino é pressionado",
  "input.onPinPressed|param|name": "o pino que precisa ser pressionado. por exemplo: TouchPin.P0",
  "input.onPinReleased": "Fazer algo quando o pino for liberado.",
  "input.onPinReleased|param|body": "o código a ser executado quando o pino é desativado",
  "input.onPinReleased|param|name": "o pino que precisa ser desativado, por exemplo: TouchPin.P0",
  "input.onScreenDown": "Anexa o código a ser executado quando a tela estiver virada para baixo.",
  "input.onScreenDown|param|body": "TODO",
  "input.onScreenUp": "Anexa o código a ser executado quando a tela estiver virada para cima.",
  "input.onScreenUp|param|body": "TODO",
  "input.onShake": "Anexa o código a ser executado quando o dispositivo é agitado.",
  "input.onShake|param|body": "TODO",
  "input.pinIsPressed": "Obter o estado do pino (ativado ou não). Requer manter o chão para fechar o circuito.",
  "input.pinIsPressed|param|name": "pino utilizado para detectar o toque, por exemplo: TouchPin.P0",
  "input.rotation": "O ajuste ou rotação do dispositivo, girando ao longo do ``eixo-x`` ou ``eixo-y``, em graus.",
  "input.rotation|param|kind": "pitch or roll",
  "input.runningTime": "Obtém o número de milissegundos decorridos desde a inicialização.",
  "input.runningTimeMicros": "Obtém o número de microssegundos decorridos desde a inicialização.",
  "input.setAccelerometerRange": "Define o intervalo da amostra do acelerómetro em gravidades.",
  "input.setAccelerometerRange|param|range": "um valor descreve a força máxima da aceleração medida",
  "input.temperature": "Obtém a temperatura em graus Celsius (°C).",
  "led": "Control of the LED screen.",
  "led.barGraphToConsole": "Controls where plotbargraph prints to the console",
  "led.brightness": "Obtém o brilho da tela de 0 (desligado) a 255 (brilho total).",
  "led.displayMode": "Obtém o modo de exibição atual",
  "led.enable": "Liga ou desliga a tela",
  "led.fadeIn": "Fades in the screen display.",
  "led.fadeIn|param|ms": "fade time in milliseconds",
  "led.fadeOut": "Fades out the screen brightness.",
  "led.fadeOut|param|ms": "fade time in milliseconds",
  "led.plot": "Ligar o LED especificado ao utilizar coordenadas x, y (x é horizontal, y é vertical). (0,0) é é a parte superior esquerda.",
  "led.plotAll": "Turns all LEDS on",
  "led.plotBarGraph": "Exibe um gráfico de barras vertical com base no valor `value` e`high`.\nSe `high` for 0, o gráfico é ajustado automaticamente",
  "led.plotBarGraph|param|high": "valor máximo do grafico que será plotado. Se for 0, o valor máximo é ajustado automaticamente, por exemplo: 0",
  "led.plotBarGraph|param|value": "valor atual a plotar gráfico acendendo os LEDs",
  "led.plotBarGraph|param|valueToConsole": "se verdadeiro, imprime o valor na porta serial",
  "led.plotBrightness": "Ligar o LED especificado com brilho específico ao utilizar coordenadas x, y (x é horizontal, y é vertical). (0,0) é a parte superior esquerdo.",
  "led.plotBrightness|param|brightness": "o brilho de 0 (desligado) to 255 (brilho total), eg:255",
  "led.plotBrightness|param|x": "a coordenada horizontal do LED começando em 0",
  "led.plotBrightness|param|y": "a coordenada vertical do LED começando em 0",
  "led.plot|param|x": "a coordenada horizontal do LED começando em 0",
  "led.plot|param|y": "a coordenada vertical do LED começando em 0",
  "led.point": "Obter o estado ligado/desligado do LED especificado utilizar as coordenadas x, y. (0,0) é a parte superior esquerda.",
  "led.pointBrightness": "Obter o estado ligado/desligado do LED especificado utilizar as coordenadas x, y. (0,0) é a parte superior esquerda.",
  "led.pointBrightness|param|x": "a coordenada horizontal do LED começando em 0",
  "led.pointBrightness|param|y": "a coordenada vertical do LED começando em 0",
  "led.point|param|x": "a coordenada horizontal do LED começando em 0",
  "led.point|param|y": "a coordenada horizontal do LED começando em 0",
  "led.screenshot": "Faz uma captura de tela da tela de LED e retorna uma imagem.",
  "led.setBrightness": "Define o brilho de tela de 0 (desligada) até 255 (brilho total).",
  "led.setBrightness|param|value": "intensidade do brilho, eg:255, 127, 0",
  "led.setDisplayMode": "Define o modo de exibição entre preto e branco e tons de cinza para a renderização de LEDs.",
  "led.setDisplayMode|param|mode": "modo de exibição no qual a tela opera",
  "led.stopAnimation": "Cancela a animação atual e limpa outras animações pendentes.",
  "led.toggle": "Alterna um pixel em particular",
  "led.toggleAll": "Inverts the current LED display",
  "led.toggle|param|x": "pixel column",
  "led.toggle|param|y": "pixel row",
  "led.unplot": "Desligar o LED especificado ao utilizar coordenadas x, y (x é horizontal, y é vertical). (0,0) é é a parte superior esquerda.",
  "led.unplot|param|x": "the horizontal coordinate of the LED",
  "led.unplot|param|y": "the vertical coordinate of the LED",
  "light.sendWS2812Buffer": "Sends a color buffer to a light strip",
  "light.sendWS2812BufferWithBrightness": "Sends a color buffer to a light strip",
  "light.setMode": "Sets the light mode of a pin",
  "loops.everyInterval": "Repeats the code forever in the background.\nApós cada iteração, permite que outros códigos sejam executados por um período definido, para que funcione como um temporizador.",
  "loops.everyInterval|param|interval": "tempo (em ms) de espera entre cada iteração da ação.",
  "msgpack.packNumberArray": "Pack a number array into a buffer.",
  "msgpack.packNumberArray|param|nums": "the numbers to be packed",
  "msgpack.unpackNumberArray": "Unpacks a buffer into a number array.",
  "music": "Generation of music tones.",
  "music.beat": "Retorna a duração de uma batida em segundos",
  "music.beginMelody": "Use startMelody instead",
  "music.builtInMelody": "Obtém o arranjo de melodia de um melody incorporada.",
  "music.builtInPlayableMelody": "Obtém o arranjo de melodia de um melody incorporada.",
  "music.builtInPlayableMelody|param|melody": "o nome da melodia",
  "music.builtinPlayableSoundEffect": "Get the sound expression string for a built-in sound effect.",
  "music.builtinPlayableSoundEffect|param|soundExpression": "a sound expression for a built-in sound effect",
  "music.builtinSoundEffect": "Get the sound expression string for a built-in a sound effect.",
  "music.builtinSoundEffect|param|soundExpression": "a sound expression for a built-in sound effect",
  "music.changeTempoBy": "Alterar o ritmo pela quantidade especificada",
  "music.changeTempoBy|param|bpm": "A alteração em batidas por minuto para o ritmo, por exemplo: 20",
  "music.createSoundEffect": "Crie uma expressão sonora a partir de um conjunto de parâmetros de efeitos sonoros.",
  "music.createSoundEffect|param|duration": "a quantidade de tempo em milissegundos (ms) que o som será reproduzido",
  "music.createSoundEffect|param|effect": "o efeito a ser aplicado à forma de onda ou volume",
  "music.createSoundEffect|param|endFrequency": "frequência final para a forma de onda do efeito sonoro",
  "music.createSoundEffect|param|endVolume": "volume final do som ou amplitude final",
  "music.createSoundEffect|param|interpolation": "método de interpolação para escala de frequência",
  "music.createSoundEffect|param|startFrequency": "frequência inicial para a forma de onda do efeito sonoro",
  "music.createSoundEffect|param|startVolume": "volume inicial do som ou amplitude inicial",
  "music.createSoundEffect|param|waveShape": "forma de onda do efeito sonoro",
  "music.createSoundExpression": "Create a sound expression from a set of sound effect parameters.",
  "music.createSoundExpression|param|duration": "the amount of time in milliseconds (ms) that sound will play for",
  "music.createSoundExpression|param|effect": "the effect to apply to the waveform or volume",
  "music.createSoundExpression|param|endFrequency": "ending frequency for the sound effect waveform",
  "music.createSoundExpression|param|endVolume": "ending volume of the sound, or ending amplitude",
  "music.createSoundExpression|param|interpolation": "interpolation method for frequency scaling",
  "music.createSoundExpression|param|startFrequency": "starting frequency for the sound effect waveform",
  "music.createSoundExpression|param|startVolume": "starting volume of the sound, or starting amplitude",
  "music.createSoundExpression|param|waveShape": "waveform of the sound effect",
  "music.getFrequencyForNote": "Converts an octave and note offset into an integer frequency.\nReturns 0 if the note is out of range.\n* @param octave    The octave of the note (1 - 8)\n\n@returns         A frequency in HZ or 0 if out of range",
  "music.getFrequencyForNote|param|note": "The offset of the note within the octave",
  "music.isSoundPlaying": "Verifique se algum som está sendo reproduzido, independentemente da fonte",
  "music.melodyEditor": "Crie uma melodia com o editor de melodia.",
  "music.noteFrequency": "seleciona a frequência de uma nota musical.",
  "music.noteFrequency|param|name": "o nome da nota musical",
  "music.onEvent": "Regista o código a ser executado em vários eventos de melody",
  "music.play": "Toque uma música, melodia ou outro som. A música toca até terminar ou pode tocar como uma tarefa em segundo plano.\nbackground task.",
  "music.playMelody": "Tocar melodia",
  "music.playMelody|param|melody": "Uma sequência de até oito notas [C D E F G A B C5] ou pausas [-], separadas por espaços, que serão tocadas uma de cada vez, Exemplo: \\\"E D G F B A C5 B \\\"",
  "music.playMelody|param|tempo": "número em batidas por minuto (bpm), ditando por quanto tempo cada nota será tocada",
  "music.playSoundEffect": "Reproduza um efeito sonoro a partir de uma sequência de expressão sonora.",
  "music.playSoundEffect|param|mode": "o modo de reprodução, jogue até terminar ou em segundo plano",
  "music.playSoundEffect|param|sound": "a string de expressão sonora",
  "music.playTone": "Reproduz uma nota musical através do pino 'P0' por uma determinada duração.",
  "music.playTone|param|frequency": "ajustar nota musical para reproduzir em Hertz (Hz)",
  "music.playTone|param|ms": "duração da nota em milissegundos (ms)",
  "music.play|param|playbackMode": "toque a música ou melodia até terminar ou como tarefa em segundo plano",
  "music.play|param|toPlay": "o som ou melodia a tocar ",
  "music.rest": "Pausa (não reproduz nada) por um tempo especificado através do pino 'P0'.",
  "music.rest|param|ms": "duração da pausa em milissegundos (ms)",
  "music.ringTone": "Reproduz nota através do pino 'P0'.",
  "music.ringTone|param|frequency": "ajuste da nota musical produzida em Hertz (Hz)",
  "music.setBuiltInSpeakerEnabled": "Ligue ou desligue o alto-falante integrado.\nDesativar o alto-falante redefine o pino de som para o padrão P0.",
  "music.setBuiltInSpeakerEnabled|param|enabled": "se o alto-falante embutido está habilitado além do pino de som",
  "music.setPlayTone": "Sets a custom playTone function for playing melodies",
  "music.setSilenceLevel": "Defines an optional sample level to generate during periods of silence.",
  "music.setTempo": "Define o tempo até a quantidade especificada",
  "music.setTempo|param|bpm": "O novo ritmo em batimentos por minuto, por exemplo: 120",
  "music.setVolume": "Define a intensidade do volume de 0 até 255",
  "music.setVolume|param|volume": "o volume de 0 até 255",
  "music.startMelody": "Starts playing a melody.\nNotes are expressed as a string of characters with this format: NOTE[octave][:duration]",
  "music.startMelody|param|melodyArray": "the melody array to play",
  "music.startMelody|param|options": "melody options, once / forever, in the foreground / background",
  "music.stopAllSounds": "Para todos sons tocando atualmente",
  "music.stopMelody": "Para as melodias",
  "music.stopMelody|param|options": "qual melodia parar",
  "music.stringPlayable": "Play a melody from the melody editor",
  "music.stringPlayable|param|bpm": "number in beats per minute dictating how long each note will play",
  "music.stringPlayable|param|melody": "string of up to eight notes [C D E F G A B C5] or rests [-] separated by spaces, which will be played one at a time, ex: \"E D G F B A C5 B \"",
  "music.tempo": "Retorna o tempo em batidas por minuto. O tempo é a velocidade (bpm = batidas por minuto) em que as notas são reproduzidas. Quanto maior o valor do tempo, mais rapidamente as notas serão reproduzidas.",
  "music.tonePlayable": "Reproduz um tom através do pino ``P0`` pela duração determinada.",
  "music.tonePlayable|param|duration": "duração do tom em milissegundos (ms)",
  "music.tonePlayable|param|note": "altura do tom a ser reproduzido em Hertz (Hz).",
  "music.volume": "Retorna o volume de saída atual do sintetizador de som.",
  "parseFloat": "Converte uma string para um número.",
  "parseInt": "Convert a string to an integer.\n\n\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
  "parseInt|param|radix": "optional A value between 2 and 36 that specifies the base of the number in text.",
  "parseInt|param|text": "A string to convert into an integral number. eg: \"123\"",
  "pause": "Pausa por um período especificado em milissegundos",
  "pauseUntil": "Busy wait for a condition to be true",
  "pauseUntil|param|condition": "condition to test for",
  "pauseUntil|param|timeOut": "if positive, maximum duration to wait for in milliseconds",
  "pause|param|ms": "a duração da pausa, por exemplo: 100, 200, 500, 1000, 2000",
  "pins": "Control currents in Pins for analog/digital signals, servos, i2c, ...",
  "pins.P0": "Pin P0",
  "pins.P1": "Pin P1",
  "pins.P10": "Pin P10",
  "pins.P11": "Pin P3",
  "pins.P12": "Pin P12",
  "pins.P13": "Pin P13",
  "pins.P14": "Pin P14",
  "pins.P15": "Pin P15",
  "pins.P16": "Pin P16",
  "pins.P19": "Pin P19",
  "pins.P2": "Pin P2",
  "pins.P20": "Pin P19",
  "pins.P3": "Pin P3",
  "pins.P4": "Pin P4",
  "pins.P5": "Pin P5",
  "pins.P6": "Pin P6",
  "pins.P7": "Pin P7",
  "pins.P8": "Pin P8",
  "pins.P9": "Pin P9",
  "pins._analogPin": "Retorna o valor de uma constante de tempo de execução C++",
  "pins._analogPinShadow": "Returns the value of a C++ runtime constant",
  "pins._analogReadWritePinShadow": "Returns the value of a C++ runtime constant",
  "pins._digitalPin": "Retorna o valor de uma constante de tempo de execução C++",
  "pins._digitalPinShadow": "Returns the value of a C++ runtime constant",
  "pins.analogPitch": "Envia um sinal de modulação por largura de pulso (PWM) para o pino de tom atual. Use `definir pino de tom analógico` para definir o pino de tom.",
  "pins.analogPitchVolume": "Gets the volume the pitch pin from 0..255",
  "pins.analogPitch|param|frequency": "frequência para modular em Hz.",
  "pins.analogPitch|param|ms": "duração do tom em milissegundos.",
  "pins.analogReadPin": "Lê o valor do conector como analógico, ou seja, como um valor entre 0 e 1023.",
  "pins.analogReadPin|param|name": "pino para ler, ex: AnalogPin.P0",
  "pins.analogSetPeriod": "Configura o período de modulação por largura de pulso (PWM) da saída analógica em microssegundos.\nSe este pino não estiver configurado como saída analógica (usando `escrita analógica pino`), a operação não terá efeito.",
  "pins.analogSetPeriod|param|micros": "período em microssegundos. ex: 20000",
  "pins.analogSetPeriod|param|name": "pino analógico para definir o período, ex: AnalogPin.P0",
  "pins.analogSetPitchPin": "Define o pino utilizado para pitch analógico ou música.",
  "pins.analogSetPitchPin|param|name": "pino para modular o pitch",
  "pins.analogSetPitchVolume": "Define o pino usado ao utilizar pitch analógico ou música.",
  "pins.analogWritePin": "Define o valor do conector como analógico. O valor deve estar entre 0 e 1023.",
  "pins.analogWritePin|param|name": "nome do pino para escrever, ex: AnalogPin.P0",
  "pins.analogWritePin|param|value": "valor para escrever no pino entre ``0`` e ``1023``. ex: 1023, 0",
  "pins.createBuffer": "Create a new zero-initialized buffer.",
  "pins.createBuffer|param|size": "number of bytes in the buffer",
  "pins.digitalReadPin": "Leia o pino ou conector especificado como 0 ou 1",
  "pins.digitalReadPin|param|name": "pin to read from, eg: DigitalPin.P0",
  "pins.digitalWritePin": "Define o valor de um pino ou conector como 0 ou 1.",
  "pins.digitalWritePin|param|name": "pino para escrever o valor, ex: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "valor a ser definido no pino, 1 ex, 0",
  "pins.i2cReadBuffer": "Read `size` bytes from a 7-bit I2C `address`.",
  "pins.i2cReadNumber": "Leia um número de um endereço I2C de 7 bits.",
  "pins.i2cWriteBuffer": "Write bytes to a 7-bit I2C `address`.",
  "pins.i2cWriteNumber": "Escreva um número em um endereço I2C de 7 bits.",
  "pins.map": "Mapeia um número de um intervalo para outro. Ou seja, um valor de ``from low`` será mapeado para ``to low``, um valor de ``from high`` será mapeado para ``to high``, e valores intermediários para valores intermediários, etc.",
  "pins.map|param|fromHigh": "o limite superior do intervalo atual do valor, por exemplo: 1023",
  "pins.map|param|fromLow": "o limite inferior do intervalo atual do valor",
  "pins.map|param|toHigh": "o limite superior do intervalo de destino do valor, por exemplo: 4",
  "pins.map|param|toLow": "o limite inferior do intervalo de destino do valor",
  "pins.map|param|value": "valor a ser mapeado nos intervalos",
  "pins.onPulsed": "Configura o pino como uma entrada digital e gera um evento quando o pino recebe um pulso, seja em nível alto ou baixo.",
  "pins.onPulsed|param|name": "pino digital para registrar, ex: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "o valor do pulso, ex: PulseValue.High",
  "pins.pulseDuration": "Obtém a duração do último pulso em microssegundos. Esta função deve ser chamada a partir de um manipulador ``onPulsed``.",
  "pins.pulseIn": "Retorna a duração de um pulso em um pino em microssegundos.",
  "pins.pulseIn|param|name": "o pino que mede o pulso, por exemplo: DigitalPin.P0",
  "pins.pulseIn|param|value": "o valor do pulso, por exemplo: PulseValue.High",
  "pins.pushButton": "Mounts a push button on the given pin",
  "pins.servoSetContinuous": "Especifica que um servo contínuo está conectado.",
  "pins.servoSetPulse": "Configura o pino de E/S como uma saída analógica/PWM e ajusta uma largura de pulso. O período é de 20 ms, e a largura do pulso é definida com base no valor fornecido em **microsegundos** ou `1/1000` milissegundos.",
  "pins.servoSetPulse|param|micros": "duração do pulso em microsegundos, por exemplo: 1500",
  "pins.servoSetPulse|param|name": "nome do pino",
  "pins.servoWritePin": "Escreve um valor no servo, controlando o eixo de acordo. Em um servo padrão, isso ajustará o ângulo do eixo (em graus), movendo-o para essa orientação. Em um servo de rotação contínua, isso ajustará a velocidade do servo (com ``0`` sendo a velocidade máxima em uma direção, ``180`` sendo a velocidade máxima na outra direção, e um valor próximo a ``90`` representando nenhuma movimentação).",
  "pins.servoWritePin|param|name": "pino para escrever, por exemplo: AnalogPin.P0",
  "pins.servoWritePin|param|value": "ângulo ou velocidade de rotação, por exemplo: 180, 90, 0",
  "pins.setAudioPin": "Define o pino usado para produzir sons e melodias. O padrão é P0.",
  "pins.setAudioPinEnabled": "Define se o áudio será ou não gerado usando um pino no conector de borda.",
  "pins.setAudioPin|param|name": "pino para modular o pitch",
  "pins.setEvents": "Configura os eventos emitidos por este pino. Os eventos podem ser assinados\nusando ``control.onEvent()``.",
  "pins.setEvents|param|name": "pino para configurar o modo de evento, por exemplo: DigitalPin.P0",
  "pins.setEvents|param|type": "o tipo de eventos que este pino deve emitir, por exemplo: PinEventType.Edge",
  "pins.setMatrixWidth": "Define a largura da matriz para a tira de LEDs Neopixel (já atribuída a um pino).\nDeve ser usada em conjunto com `definir largura da matriz` do pacote Neopixel.",
  "pins.setPull": "Configura a direção de pull de um pino.",
  "pins.setPull|param|name": "pino para configurar o modo de pull, ex: DigitalPin.P0",
  "pins.setPull|param|pull": "uma das configurações de pull do mbed, ex: PinPullMode.PullUp",
  "pins.spiFormat": "Defina os bits e o modo do SPI",
  "pins.spiFormat|param|bits": "o número de bits, ex: 8",
  "pins.spiFormat|param|mode": "o modo, ex: 3",
  "pins.spiFrequency": "Defina a frequência do SPI",
  "pins.spiFrequency|param|frequency": "a frequência do relógio, ex: 1000000",
  "pins.spiPins": "Define os pinos MOSI, MISO, SCK usados pela conexão SPI",
  "pins.spiTransfer": "Write to and read from the SPI slave at the same time",
  "pins.spiTransfer|param|command": "Data to be sent to the SPI slave (can be null)",
  "pins.spiTransfer|param|response": "Data received from the SPI slave (can be null)",
  "pins.spiWrite": "Escreve para o escravo SPI e retorna a resposta",
  "pins.spiWrite|param|value": "Dados a serem enviados para o escravo SPI",
  "pins.touchSetMode": "Configura a detecção de toque para os pinos e o logo.\nP0, P1, P2 usam toque resistivo por padrão.\nO logo usa toque capacitivo por padrão.",
  "pins.touchSetMode|param|mode": "o modo de toque a ser utilizado",
  "pins.touchSetMode|param|name": "alvo para mudar o modo d  e toque",
  "randint": "Retorna um número pseudo-aleatório entre o mínimo e o máximo inclusivo.\nSe ambos os números forem inteiros, o resultado será inteiro.",
  "randint|param|max": "o limite superior inclusivo, ex: 10",
  "randint|param|min": "o limite inferior inclusivo, ex: 0",
  "serial": "Reading and writing data over a serial connection.",
  "serial.NEW_LINE": "The string used to mark a new line, default is \\r\\n",
  "serial.delimiters": "Retorna a string delimitadora correspondente",
  "serial.onDataReceived": "Registra um evento a ser disparado quando um dos delimitadores for correspondido.",
  "serial.readBuffer": "Lê múltiplos caracteres do buffer de recepção.\nSe o comprimento for positivo, pausa até que haja caracteres suficientes.",
  "serial.readBuffer|param|length": "comprimento do buffer padrão",
  "serial.readLine": "Lê uma linha de texto da porta serial.",
  "serial.readString": "Lê os dados recebidos no buffer como uma string",
  "serial.readUntil": "Lê uma linha de texto da porta serial e retorna o buffer quando o delimitador for encontrado.",
  "serial.readUntil|param|delimiter": "delimitador de texto que separa cada parte do texto",
  "serial.redirect": "Define a entrada e saída serial para usar pinos em vez da conexão USB.",
  "serial.redirectToUSB": "Direciona a entrada e saída serial para usar a conexão USB.",
  "serial.redirect|param|rate": "a nova taxa de transmissão. ex: 115200",
  "serial.redirect|param|rx": "o novo pino de recepção, ex: SerialPin.P1",
  "serial.redirect|param|tx": "o novo pino de transmissão, ex: SerialPin.P0",
  "serial.setBaudRate": "Define a taxa de transmissão (baud rate) da porta serial",
  "serial.setRxBufferSize": "Define o tamanho do buffer RX em bytes",
  "serial.setRxBufferSize|param|size": "comprimento do buffer RX em bytes, ex: 32",
  "serial.setTxBufferSize": "Define o tamanho do buffer TX em bytes",
  "serial.setTxBufferSize|param|size": "comprimento do buffer TX em bytes, ex: 32",
  "serial.setWriteLinePadding": "Define o comprimento de preenchimento para as linhas enviadas com \"escrever linha\".",
  "serial.setWriteLinePadding|param|length": "o número de bytes de alinhamento, por exemplo: 0",
  "serial.writeBuffer": "Envia um buffer através da conexão serial.",
  "serial.writeDmesg": "Send DMESG debug buffer over serial.",
  "serial.writeLine": "Imprime uma linha de texto na porta serial",
  "serial.writeNumber": "Imprime um valor numérico na porta serial",
  "serial.writeNumbers": "Imprime um array de valores numéricos como CSV na porta serial",
  "serial.writeString": "Envia um pedaço de texto através da conexão serial.",
  "serial.writeValue": "Escreve um par nome:valor como uma linha na porta serial.",
  "serial.writeValue|param|name": "nome do fluxo de valor, ex: x",
  "serial.writeValue|param|value": "valor a ser escrito"
}