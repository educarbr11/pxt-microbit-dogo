{
  "bluetooth": "Support for additional Bluetooth services.\n\nSupport for additional Bluetooth services.",
  "bluetooth.advertiseUid": "Advertise an Eddystone UID",
  "bluetooth.advertiseUidBuffer": "Advertise an Eddystone UID",
  "bluetooth.advertiseUidBuffer|param|connectable": "true to keep bluetooth connectable for other services, false otherwise.",
  "bluetooth.advertiseUidBuffer|param|nsAndInstance": "16 bytes buffer of namespace (bytes 0-9) and instance (bytes 10-15)",
  "bluetooth.advertiseUidBuffer|param|power": "power level between 0 and 7, eg: 7",
  "bluetooth.advertiseUid|param|connectable": "true to keep bluetooth connectable for other services, false otherwise.",
  "bluetooth.advertiseUid|param|instance": "4 last bytes of the instance uid",
  "bluetooth.advertiseUid|param|ns": "4 last bytes of the namespace uid",
  "bluetooth.advertiseUid|param|power": "power level between 0 and 7, eg: 7",
  "bluetooth.advertiseUrl": "Advertise an Eddystone URL",
  "bluetooth.advertiseUrl|param|connectable": "true to keep bluetooth connectable for other services, false otherwise.",
  "bluetooth.advertiseUrl|param|power": "power level between 0 and 7, eg: 7",
  "bluetooth.advertiseUrl|param|url": "the url to transmit. Must be no longer than the supported eddystone url length, eg: \"https://makecode.com\"",
  "bluetooth.onBluetoothConnected": "registra o codigo a ser executado quando uma conexao bluetooth for estabelecida",
  "bluetooth.onBluetoothConnected|param|body": "codigo roda quando uma conexao bluetooth for estabelecida",
  "bluetooth.onBluetoothDisconnected": "registra o codigo a ser executado quando uma conexao bluetooth for perdida",
  "bluetooth.onBluetoothDisconnected|param|body": "codigo roda quando uma conexao bluetooth for perdida",
  "bluetooth.onUartDataReceived": "Registers an event to be fired when one of the delimiter is matched.",
  "bluetooth.onUartDataReceived|param|delimiters": "the characters to match received characters against.",
  "bluetooth.setTransmitPower": "Define a pot√™ncia de transmiss√£o bluetooth entre 0 (minimal) e 7 (maximal).",
  "bluetooth.setTransmitPower|param|power": "nivel de pot√™ncia entre 0 (m√≠nimo) e 7 (m√°ximo), exemplo: 7.",
  "bluetooth.startAccelerometerService": "Inicia o servi√ßo de aceler√¥metro Bluetooth",
  "bluetooth.startButtonService": "Inicia o servi√ßo de bot√£o Bluetooth",
  "bluetooth.startIOPinService": "Inicia o servi√ßo de pino IO Bluetooth.",
  "bluetooth.startLEDService": "Inicia o servi√ßo LED Bluetooth",
  "bluetooth.startMagnetometerService": "Inicia o servi√ßo de magnet√¥metro Bluetooth",
  "bluetooth.startTemperatureService": "Inicia o servi√ßo de temperatura Bluetooth",
  "bluetooth.startUartService": "Inicia o servi√ßo de UART Bluetooth",
  "bluetooth.stopAdvertising": "O micro:bit para de dizer \"Estou aqui!\" para outros aparelhos.",
  "bluetooth.uartReadBuffer": "Recebe um buffer de dados via Bluetooth UART",
  "bluetooth.uartReadUntil": "L√™ uma mensagem enviada por outro aparelho via Bluetooth",
  "bluetooth.uartWriteBuffer": "Envia um buffer de dados via Bluetooth UART",
  "bluetooth.uartWriteLine": "O micro:bit manda \"Ol√°\" para o celular (ou outro micro:bit) e depois pula para a linha de baixo, se for mandar outra mensagem depois.",
  "bluetooth.uartWriteNumber": "O micro:bit manda uma mensagem dizendo ‚Äúpontos vale 100‚Äù para o celular ou outro micro:bit.",
  "bluetooth.uartWriteString": "O micro:bit envia um texto para outro dispositivo (como um celular ou outro micro:bit) usando Bluetooth.\nO micro:bit manda a frase ‚ÄúOl√°‚Äù para quem est√° conectado com ele pelo Bluetooth.",
  "bluetooth.uartWriteValue": "O micro:bit manda uma informa√ß√£o com nome e n√∫mero para outro aparelho.\n√â como dizer:\nüëâ ‚Äútemperatura = 30‚Äù\nüëâ ‚Äúpontos = 10‚Äù",
  "bluetooth.uartWriteValue|param|name": "name of the value stream, eg: x",
  "bluetooth.uartWriteValue|param|value": "to write"
}